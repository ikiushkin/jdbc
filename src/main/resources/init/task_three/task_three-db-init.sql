/*DROP DATABASE IF EXISTS social_network;*/
/*CREATE DATABASE social_network;*/
/*USE social_network;*/

DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
        ID INT NOT NULL AUTO_INCREMENT,
        NAME VARCHAR(100) NOT NULL,
        SURNAME VARCHAR(100) NOT NULL,
        CREATED_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS friendships;

CREATE TABLE IF NOT EXISTS friendships (
        USER_ID1 INT NOT NULL,
        USER_ID2 INT NOT NULL,
        CREATED_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY u1 (USER_ID1) REFERENCES users (ID),
        FOREIGN KEY u2 (USER_ID2) REFERENCES users (ID),
        UNIQUE KEY `unique` (`USER_ID1`, `USER_ID2`)
);

DROP TABLE IF EXISTS posts;

CREATE TABLE  IF NOT EXISTS posts (
        ID INT NOT NULL AUTO_INCREMENT,
        USER_ID INT NOT NULL,
        TEXT VARCHAR(250) NOT NULL,
        CREATED_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (ID),
        FOREIGN KEY (USER_ID) REFERENCES users (ID),
        UNIQUE KEY `unique` (`USER_ID`, `TEXT`)
);

DROP TABLE IF EXISTS likes;

CREATE TABLE IF NOT EXISTS likes (
        POST_ID INT NOT NULL,
        USER_ID INT NOT NULL,
        CREATED_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (POST_ID) REFERENCES posts (ID),
        FOREIGN KEY (USER_ID) REFERENCES users (ID),
        UNIQUE KEY `unique` (`POST_ID`, `USER_ID`)
);